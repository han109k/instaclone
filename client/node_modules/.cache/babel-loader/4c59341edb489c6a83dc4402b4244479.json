{"ast":null,"code":"var _jsxFileName = \"/home/mk-x/Desktop/instaclone/client/src/Table.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableHeader = () => {\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TableHeader;\n\nconst TableBody = ({\n  characterData\n}) => {\n  const rows = characterData.map((row, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: row.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: row.job\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = TableBody;\n\nclass Table extends Component {\n  render() {\n    const {\n      characterData\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"border-separate border border-green-800\",\n      children: [/*#__PURE__*/_jsxDEV(TableHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        characterData: characterData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Table;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableHeader\");\n$RefreshReg$(_c2, \"TableBody\");","map":{"version":3,"sources":["/home/mk-x/Desktop/instaclone/client/src/Table.js"],"names":["React","Component","TableHeader","TableBody","characterData","rows","map","row","index","name","job","Table","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;KAAMA,W;;AAWN,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AACrC,QAAMC,IAAI,GAAGD,aAAa,CAACE,GAAd,CAAkB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7C,wBACE;AAAA,8BACE;AAAA,kBAAKD,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKF,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAASF,KAAT;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPY,CAAb;AASA,sBAAO;AAAA,cAAQH;AAAR;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAXD;;MAAMF,S;;AAaN,MAAMQ,KAAN,SAAoBV,SAApB,CAA8B;AAC5BW,EAAAA,MAAM,GAAG;AACP,UAAM;AAACR,MAAAA;AAAD,QAAkB,KAAKS,KAA7B;AACA,wBACE;AAAO,MAAA,SAAS,EAAC,yCAAjB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,aAAa,EAAET;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAT2B;;AAY9B,eAAeO,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  );\n};\n\nconst TableBody = ({characterData}) => {\n  const rows = characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n      </tr>\n    )\n  })\n\n  return <tbody>{rows}</tbody>;\n};\n\nclass Table extends Component {\n  render() {\n    const {characterData} = this.props;\n    return (\n      <table className=\"border-separate border border-green-800\">\n        <TableHeader />\n        <TableBody characterData={characterData}/>\n      </table>\n    );\n  }\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}