{"ast":null,"code":"var _jsxFileName = \"/home/mk-x/Desktop/instaclone/client/src/components/forms/ControlledInputs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ControlledInputs() {\n  _s();\n\n  const [username, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [people, setPeople] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (username && email) {\n      const person = {\n        id: new Date(),\n        username,\n        email\n      };\n      setPeople(people => {\n        return [...people, person];\n      });\n      console.log(person);\n      setUserName(\"\");\n      setEmail(\"\");\n    } else {\n      console.log(\"Values empty\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"mt-10 mx-auto max-w-md rounded-l-md border border-r-1 border-gray-300 p-5\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"col-span-2 text-sm font-light pt-2\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"col-span-8 rounded text-sm\",\n            name: \"username\",\n            value: username,\n            onChange: e => setUserName(e.target.value),\n            placeholder: \"iamtheuser\",\n            autoFocus: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-10 mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"col-span-2 text-sm font-light pt-2\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"col-span-8 rounded text-sm\",\n            name: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"example@abc.com\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-8 bg-gray-600 text-white px-4 py-1 rounded-lg\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-5 font-normal underline\",\n        children: \"User list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: people.map(person => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"grid grid-cols-10 mx-auto max-w-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"inline col-span-3 font-medium\",\n              children: person.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"inline col-span-7 font-light\",\n              children: person.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, person.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ControlledInputs, \"zlqfsL3WXGpSQe2iRalO7WivF80=\");\n\n_c = ControlledInputs;\nexport default ControlledInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledInputs\");","map":{"version":3,"sources":["/home/mk-x/Desktop/instaclone/client/src/components/forms/ControlledInputs.jsx"],"names":["React","useState","ControlledInputs","username","setUserName","email","setEmail","people","setPeople","handleSubmit","e","preventDefault","person","id","Date","console","log","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nfunction ControlledInputs() {\n  const [username, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [people, setPeople] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (username && email) {\n      const person = { id: new Date(), username, email };\n      setPeople((people) => {\n        return [...people, person];\n      });\n      console.log(person);\n      setUserName(\"\");\n      setEmail(\"\");\n    } else {\n      console.log(\"Values empty\");\n    }\n  };\n\n  return (\n    <>\n      <article className=\"mt-10 mx-auto max-w-md rounded-l-md border border-r-1 border-gray-300 p-5\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"grid grid-cols-10\">\n            <label\n              htmlFor=\"username\"\n              className=\"col-span-2 text-sm font-light pt-2\"\n            >\n              Username\n            </label>\n            <input\n              type=\"text\"\n              className=\"col-span-8 rounded text-sm\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => setUserName(e.target.value)}\n              placeholder=\"iamtheuser\"\n              autoFocus\n              required\n            />\n          </div>\n          <div className=\"grid grid-cols-10 mt-8\">\n            <label\n              htmlFor=\"email\"\n              className=\"col-span-2 text-sm font-light pt-2\"\n            >\n              Email\n            </label>\n            <input\n              type=\"email\"\n              className=\"col-span-8 rounded text-sm\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"example@abc.com\"\n              required\n            />\n          </div>\n\n          <button className=\"mt-8 bg-gray-600 text-white px-4 py-1 rounded-lg\">\n            Save\n          </button>\n        </form>\n      </article>\n      <section className=\"mt-5\">\n        <h2 className=\"mb-5 font-normal underline\">User list</h2>\n        <ul>\n          {people.map((person) => {\n            return (\n              <li key={person.id} className=\"grid grid-cols-10 mx-auto max-w-md\">\n                <p className=\"inline col-span-3 font-medium\">\n                  {person.username}\n                </p>\n                <p className=\"inline col-span-7 font-light\">\n                  {person.email}\n                </p>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    </>\n  );\n}\n\nexport default ControlledInputs;\n"]},"metadata":{},"sourceType":"module"}